{"version":3,"sources":["../src/AcronymCreator.js"],"names":["AcronymCreator","_wordQueue","word","push","length","acronym","clear"],"mappings":"AAAA;AACA;;;;;;;AACA;;;;;;;;AACA;;;;;IAKqBA,c;;;AACjB,4BAAc;AAAA;;AACV,SAAKC,UAAL,GAAkB,EAAlB;AACH;;;;4BAEOC,I,EAAM;AACV,WAAKD,UAAL,CAAgBE,IAAhB,CAAqBD,IAArB;AACH;;;wCAEmB;AAChB,aAAO,KAAKD,UAAL,CAAgBG,MAAhB,GAAyB,CAAhC;AACH;;;qCAEgB;AACb,UAAMC,OAAO,GAAG,qCAAqB,KAAKJ,UAA1B,CAAhB;AACA,WAAKK,KAAL;AACA,aAAOD,OAAP;AACH;;;4BAEO;AACJ,WAAKJ,UAAL,GAAkB,EAAlB;AACH","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport { expandWordsToAcronym } from \"./word-utils\";\n/**\n * Build acronym from words.\n *\n * Word Word Word => WWW\n */\nexport default class AcronymCreator {\n    constructor() {\n        this._wordQueue = [];\n    }\n\n    addWord(word) {\n        this._wordQueue.push(word);\n    }\n\n    canExtractAcronym() {\n        return this._wordQueue.length > 0;\n    }\n\n    extractAcronym() {\n        const acronym = expandWordsToAcronym(this._wordQueue);\n        this.clear();\n        return acronym;\n    }\n\n    clear() {\n        this._wordQueue = [];\n    }\n}\n"],"file":"AcronymCreator.js"}